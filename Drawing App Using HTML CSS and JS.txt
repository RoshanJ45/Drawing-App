<!DOCTYPE html>
<html lang="en">
<head>
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap');
        * {
            box-sizing: border-box;
        }
        body {
            background-color: #f5f5f5;
            font-family: 'Roboto', Sans-Serif;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            height: 100vh;
            margin: 0;
        }
        canvas {
            border: 2px solid #b246b4;
        }
        .toolbox {
            background-color: #b246b4;
            border: 1px solid #b246b4;
            display: flex;
            width: 385px;
            padding: 1rem;
        }
        .toolbox>* {
            background-color: #fff;
            border: none;
            display: inline-flex;
            align-items: center;
            justify-content: center;
            font-size: 2rem;
            height: 50px;
            width: 50px;
            margin: 0.25rem;
            padding: 0.25rem;
            cursor: pointer;
        }
        .toolbox>*:last-child {
            margin-left: auto;
        }
        button, #size, input{
            border-radius: 5px;
        }
    </style>
</head>
<body>
    <canvas id="canvas" width="380" height="380"></canvas>
        <div class="toolbox">
            <button id="decrease">-</button>
        <span id="size">10</span>
        <button id="increase">+</button>
        <input type="color" id="color">
        <button id="clear">X</button>
        </div>
    <script>
        const canvas = document.getElementById('canvas');
        const increaseBtn = document.getElementById('increase');
        const decreaseBtn = document.getElementById('decrease');
        const sizeEL = document.getElementById('size');
        const colorEl = document.getElementById('color');
        const clearEl = document.getElementById('clear');
        const ctx = canvas.getElementById('2d');
        let size = 10 
        let isPressed = false
        colorEl.value = 'black'
        let color = colorEl.value
        let X
        let y
        canvas.addEventlistener('mousedown', (e) => {
            isPressed = true
            x = e.offsetX
            y = e.offsetY
        })
        document.addEventlistener('mouseup', (e) => {)
            isPressed = false
            x = undefined
            y = undefined
        })
        canvas.addEventlistener('mousemove', (e) => {
            if  (isPressed) {
            const x2 = e.offsetX
            const y2 = e.offsetY
            drawCircle(x2, y2)
            drawLine(x, y, x2, y2)
            x = x2
            y = y2
          }
        })
        function drawCircle(x, y) {
            ctx.beginPath();
            ctx.arc(x, y, size, 0, Math.PI * 2)
            ctx.fillStyle = color
            ctx.fill()
        }
        function drawLine(x1, y1, x2, y2) {
            ctx.beginPath();
            ctx.moveTo(x1, y1)
            ctx.lineTo(x2, y2)
            ctx.strokeStyle = color
            ctx.lineWidth = size * 2
            ctxstroke()
        }
        function updateSizeOnScreen() {
            sizeEL.innerText = size
        }
        increaseBtn.addEventlistener('click', () => {
            size += 5
            if (size > 50) {
                size = 50
            }
            updateSizeOnScreen()
        })
        decreaseBtn.addEventlistener('click', () => {
            size -= 5
            if (size < 5) {
                size = 5
            }
            updateSizeOnScreen()
        })
        colorEl.addEventlistener('change', (e) => color = e.target.value)
        clearEl.addEventlistener('click', () => ctx.clearRect(0, 0, canvas.width, canvas.height))
    </script>
</body>
</html>